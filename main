#! /usr/bin/env bash
set -o errexit
set -o pipefail

### Check version
PACKEGES_TO_UPDATE_MSG="$(npx -y npm-check-updates@latest -p npm -t semver --install never | sed "1,2d; $d" | sed "$ d")"
PACKEGES_TO_UPDATE="$(npx -y npm-check-updates@latest -p npm -t semver --install never --jsonUpgraded | jq -cr 'to_entries | map("\(.key)@\(.value|tostring)") | .[]')"

### Setup git
git config user.name "$GH_ACTOR"
git config user.email "$(gh api /users/$GH_ACTOR | jq .email -r)"

readarray -t <<<$PACKEGES_TO_UPDATE_MSG
if ! [ "$PACKEGES_TO_UPDATE" = "" ]; then
  ### If any packages need update, one updated packaed per commit/push(for ci)
  IDX=0
  for PACKAGE in $PACKEGES_TO_UPDATE; do
    echo " ${MAPFILE[$IDX]}"
    NODE_ENV=development npm install "$PACKAGE" --package-lock-only --ignore-scripts --loglevel silent
    git add package-lock.json
    git add package.json
    git commit -q -m "chore(deps): update dependency ${MAPFILE[$IDX]}"
    git push -q
    IDX=$(expr $IDX + 1)
  done
else
  ### If no package needs update, sync lockfile
  NODE_ENV=development npm install --package-lock-only --ignore-scripts --loglevel silent

  ### If lockfile updated, add to git
  if [ "$(git status --short)" != "" ]; then
    git add package-lock.json
    git commit -q -m "chore(deps): Update dependencies that are not directly dependent"
    git push -q
  fi
fi
